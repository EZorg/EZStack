# Application / Job

# Application / Job
app.class=org.ezstack.deity.DenormalizationDeityApp
app.runner.class=org.apache.samza.runtime.RemoteApplicationRunner

job.name=denormalization-deity-app
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.default.system=kafka
job.systemstreampartition.grouper.factory=org.apache.samza.container.grouper.stream.GroupByPartitionFactory
job.container.count=1

# YARN
yarn.package.path=file://${basedir}/target/${project.artifactId}-${pom.version}-dist.tar.gz

# Serializers
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory

# Kafka System
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.consumer.zookeeper.connect=localhost:2181
systems.kafka.producer.bootstrap.servers=localhost:9092
systems.kafka.default.stream.replication.factor=1
systems.kafka.default.stream.samza.msg.serde=json
systems.kafka.default.stream.samza.key.serde=string

# Task/Application
task.name.grouper.factory=org.apache.samza.container.grouper.task.GroupByContainerIdsFactory

# Datadog Key
#deity.datadog.key={YOUR-KEY-HERE}

#Update Interval in seconds
deity.update.interval.secs=60

#URI Address for EZappClientFactory
deity.clientfactory.uri.address=http://localhost:8080

#Rule Cache Update Interval in seconds
deity.cache.interval.secs=10

#Query Count required for Update
deity.update.query.threshold=5000

#Deity capacity for unique histograms
deity.max.histogram.count=50000

#Maximum denormalizer rule capacity
deity.max.rule.capacity=20

# Metrics
metrics.reporters=snapshot,jmx
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.metrics
metrics.reporter.jmx.class=org.apache.samza.metrics.reporter.JmxReporterFactory